{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Joe/Projects/PDX-Forward-Policy-Explorer/app/lib/constants.ts"],"sourcesContent":["\nexport const COST_CATEGORIES = [\n  { id: \"all\", name: \"All Costs\", emoji: \"üîç\" },\n  { id: \"none\", name: \"No Cost\", emoji: \"üÜì\" },\n  { id: \"minimal\", name: \"Minimal Cost\", emoji: \"üí∞\" },\n  { id: \"moderate\", name: \"Moderate Cost\", emoji: \"üí∞üí∞\" },\n  { id: \"substantial\", name: \"Substantial Cost\", emoji: \"üí∞üí∞üí∞\" },\n  { id: \"variable\", name: \"Variable Cost\", emoji: \"üé≤\" },\n\n] as const;\n\nexport const FISCAL_IMPACTS = [\n  { id: \"all\", name: \"All Budgets\", emoji: \"üîç\" },\n  { id: \"revenue_neutral\", name: \"Revenue Neutral\", emoji: \"‚öñÔ∏è\" },\n  { id: \"cost_saving\", name: \"Cost Saving\", emoji: \"üíé\" },\n  { id: \"needs_revenue\", name: \"Needs Revenue\", emoji: \"ü§å\" },\n] as const;\n\nexport const DOMAINS = [\n  { id: \"all\", name: \"Policy Areas\", emoji: \"üîç\" },\n  { id: \"housing\", name: \"Housing\", emoji: \"üèòÔ∏è\" },\n  { id: \"environment\", name: \"Environment\", emoji: \"üå±\" },\n  { id: \"safety\", name: \"Safety\", emoji: \"üõ°Ô∏è\" },\n  { id: \"democracy\", name: \"Democracy\", emoji: \"üó≥Ô∏è\" },\n  { id: \"economic-development\", name: \"Economic Development\", emoji: \"üìà\" },\n  {\n    id: \"infrastructure-and-transportation\",\n    name: \"Infrastructure & Transportation\",\n    emoji: \"üöå\",\n  },\n  { id: \"social-services\", name: \"Social Services\", emoji: \"ü§ù\" },\n  { id: \"public-health\", name: \"Public Health\", emoji: \"‚öïÔ∏è\" },\n] as const;\n\nexport const STAKEHOLDER_CATEGORIES = [\n\n]\n\nexport type CostCategory = (typeof COST_CATEGORIES)[number][\"id\"];\nexport type FiscalImpact = (typeof FISCAL_IMPACTS)[number][\"id\"];\nexport type StakeholderCategory = (typeof STAKEHOLDER_CATEGORIES)[number][\"id\"];\nexport type DomainId = (typeof DOMAINS)[number][\"id\"];\n\nexport type DomainMap = {\n  [key: string]: DomainId[];\n};\n\nexport const SHEET_ID = \"1wGJeSwToqQp7Mg-77TYRzBlrTRsoECJg0QUMDXU3Q_4\";\n\nexport const SHEETS = {\n  policies: \"Policies\",\n  policyDomains: \"Policy_Domains\",\n} as const;\n\nexport type DomainFilterMode = \"ANY\" | \"ALL\""],"names":[],"mappings":";;;;;;;;AACO,MAAM,kBAAkB;IAC7B;QAAE,IAAI;QAAO,MAAM;QAAa,OAAO;IAAK;IAC5C;QAAE,IAAI;QAAQ,MAAM;QAAW,OAAO;IAAK;IAC3C;QAAE,IAAI;QAAW,MAAM;QAAgB,OAAO;IAAK;IACnD;QAAE,IAAI;QAAY,MAAM;QAAiB,OAAO;IAAO;IACvD;QAAE,IAAI;QAAe,MAAM;QAAoB,OAAO;IAAS;IAC/D;QAAE,IAAI;QAAY,MAAM;QAAiB,OAAO;IAAK;CAEtD;AAEM,MAAM,iBAAiB;IAC5B;QAAE,IAAI;QAAO,MAAM;QAAe,OAAO;IAAK;IAC9C;QAAE,IAAI;QAAmB,MAAM;QAAmB,OAAO;IAAK;IAC9D;QAAE,IAAI;QAAe,MAAM;QAAe,OAAO;IAAK;IACtD;QAAE,IAAI;QAAiB,MAAM;QAAiB,OAAO;IAAK;CAC3D;AAEM,MAAM,UAAU;IACrB;QAAE,IAAI;QAAO,MAAM;QAAgB,OAAO;IAAK;IAC/C;QAAE,IAAI;QAAW,MAAM;QAAW,OAAO;IAAM;IAC/C;QAAE,IAAI;QAAe,MAAM;QAAe,OAAO;IAAK;IACtD;QAAE,IAAI;QAAU,MAAM;QAAU,OAAO;IAAM;IAC7C;QAAE,IAAI;QAAa,MAAM;QAAa,OAAO;IAAM;IACnD;QAAE,IAAI;QAAwB,MAAM;QAAwB,OAAO;IAAK;IACxE;QACE,IAAI;QACJ,MAAM;QACN,OAAO;IACT;IACA;QAAE,IAAI;QAAmB,MAAM;QAAmB,OAAO;IAAK;IAC9D;QAAE,IAAI;QAAiB,MAAM;QAAiB,OAAO;IAAK;CAC3D;AAEM,MAAM,yBAAyB,EAErC;AAWM,MAAM,WAAW;AAEjB,MAAM,SAAS;IACpB,UAAU;IACV,eAAe;AACjB","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Joe/Projects/PDX-Forward-Policy-Explorer/app/lib/data.ts"],"sourcesContent":["import Papa from 'papaparse';\r\nimport { Policy, PolicyDomain, DomainMap } from './types';\r\nimport { SHEET_ID, SHEETS, DomainId } from './constants';\r\n\r\nexport async function fetchSheet<T>(sheetName: string): Promise<T[]> {\r\n    try {\r\n        const response = await fetch(\r\n            `https://docs.google.com/spreadsheets/d/${SHEET_ID}/gviz/tq?tqx=out:csv&sheet=${encodeURIComponent(\r\n                sheetName\r\n            )}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to fetch ${sheetName}`);\r\n        }\r\n\r\n        const text = await response.text();\r\n        return Papa.parse<T>(text, {\r\n            header: true,\r\n            skipEmptyLines: true,\r\n            transform: (value) => value.trim(),\r\n        }).data;\r\n    } catch (err) {\r\n        console.error(`Error fetching ${sheetName}:`, err);\r\n        throw err;\r\n    }\r\n}\r\n\r\nexport async function fetchPolicies(): Promise<Policy[]> {\r\n    return fetchSheet<Policy>(SHEETS.policies);\r\n}\r\n\r\nexport async function fetchPolicyDomains(): Promise<DomainMap> {\r\n    const domainData = await fetchSheet<PolicyDomain>(SHEETS.policyDomains);\r\n    const domainMap: DomainMap = {};\r\n\r\n    domainData.forEach((row) => {\r\n        const domains = row.domain_id\r\n            .split(\" \")\r\n            .filter(Boolean)\r\n            .map((domain) => domain.replace(/,/g, \"\").trim()) as DomainId[];\r\n\r\n        domainMap[row.policy_id] = domains;\r\n    });\r\n\r\n    return domainMap;\r\n}\r\n\r\nexport async function fetchPolicyById(policyId: string): Promise<Policy | null> {\r\n    const policies = await fetchPolicies();\r\n    return policies.find(p => p.policy_id === policyId) || null;\r\n}"],"names":[],"mappings":";;;;;;AAAA;AAEA;;;AAEO,eAAe,WAAc,SAAiB;IACjD,IAAI;QACA,MAAM,WAAW,MAAM,MACnB,CAAC,uCAAuC,EAAE,uHAAA,CAAA,WAAQ,CAAC,2BAA2B,EAAE,mBAC5E,YACD;QAGP,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE,WAAW;QAClD;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,sIAAA,CAAA,UAAI,CAAC,KAAK,CAAI,MAAM;YACvB,QAAQ;YACR,gBAAgB;YAChB,WAAW,CAAC,QAAU,MAAM,IAAI;QACpC,GAAG,IAAI;IACX,EAAE,OAAO,KAAK;QACV,QAAQ,KAAK,CAAC,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC,EAAE;QAC9C,MAAM;IACV;AACJ;AAEO,eAAe;IAClB,OAAO,WAAmB,uHAAA,CAAA,SAAM,CAAC,QAAQ;AAC7C;AAEO,eAAe;IAClB,MAAM,aAAa,MAAM,WAAyB,uHAAA,CAAA,SAAM,CAAC,aAAa;IACtE,MAAM,YAAuB,CAAC;IAE9B,WAAW,OAAO,CAAC,CAAC;QAChB,MAAM,UAAU,IAAI,SAAS,CACxB,KAAK,CAAC,KACN,MAAM,CAAC,SACP,GAAG,CAAC,CAAC,SAAW,OAAO,OAAO,CAAC,MAAM,IAAI,IAAI;QAElD,SAAS,CAAC,IAAI,SAAS,CAAC,GAAG;IAC/B;IAEA,OAAO;AACX;AAEO,eAAe,gBAAgB,QAAgB;IAClD,MAAM,WAAW,MAAM;IACvB,OAAO,SAAS,IAAI,CAAC,CAAA,IAAK,EAAE,SAAS,KAAK,aAAa;AAC3D","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Joe/Projects/PDX-Forward-Policy-Explorer/app/policy/%5BpolicyId%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useRouter } from 'next/navigation';\r\nimport { fetchPolicyById, fetchPolicyDomains } from '@/app/lib/data';\r\nimport { Policy, DomainMap } from '@/app/lib/types';\r\nimport { DOMAINS, COST_CATEGORIES, FISCAL_IMPACTS, DomainId } from '@/app/lib/constants';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { X, Share2, Check } from 'lucide-react';\r\n\r\nexport default function PolicyDetailPage() {\r\n    const params = useParams();\r\n    const router = useRouter();\r\n    const policyId = params.policyId as string;\r\n\r\n    const [policy, setPolicy] = useState<Policy | null>(null);\r\n    const [policyDomains, setPolicyDomains] = useState<DomainId[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [copied, setCopied] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const loadPolicy = async () => {\r\n            try {\r\n                setLoading(true);\r\n\r\n                const [policyData, domainsData] = await Promise.all([\r\n                    fetchPolicyById(policyId),\r\n                    fetchPolicyDomains(),\r\n                ]);\r\n\r\n                if (!policyData) {\r\n                    setError('Policy not found');\r\n                    return;\r\n                }\r\n\r\n                setPolicy(policyData);\r\n                setPolicyDomains(domainsData[policyId] || []);\r\n            } catch (err) {\r\n                setError(err instanceof Error ? err.message : 'Failed to load policy');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        loadPolicy();\r\n    }, [policyId]);\r\n\r\n    // Handle domain clicks\r\n    const handleDomainClick = (domain: DomainId) => {\r\n        router.push(`/?domains=${domain}`);\r\n    };\r\n\r\n    // Copy link to policy\r\n    const copyPolicyLink = () => {\r\n        navigator.clipboard.writeText(window.location.href)\r\n            .then(() => {\r\n                setCopied(true);\r\n                setTimeout(() => setCopied(false), 2000);\r\n            })\r\n            .catch(err => console.error(\"Failed to copy URL: \", err));\r\n    };\r\n\r\n    // Helper function for domain colors\r\n    const getDomainColor = (domain: DomainId): string => {\r\n        const colors: Record<Exclude<DomainId, \"all\">, string> = {\r\n            housing: \"bg-pink-100 text-pink-800\",\r\n            environment: \"bg-green-100 text-green-800\",\r\n            safety: \"bg-yellow-100 text-yellow-800\",\r\n            democracy: \"bg-blue-100 text-blue-800\",\r\n            \"economic-development\": \"bg-orange-100 text-orange-800\",\r\n            \"infrastructure-and-transportation\": \"bg-indigo-100 text-indigo-800\",\r\n            \"social-services\": \"bg-purple-100 text-purple-800\",\r\n            \"public-health\": \"bg-red-100 text-red-800\",\r\n        };\r\n\r\n        return (\r\n            colors[domain as Exclude<DomainId, \"all\">] || \"bg-gray-100 text-gray-800\"\r\n        );\r\n    };\r\n\r\n    // Helper function to render stakeholders with categories\r\n    const renderStakeholders = (stakeholdersString: string) => {\r\n        if (!stakeholdersString) return null;\r\n\r\n        // Create a more robust regex pattern for categories\r\n        const categoryMatches = stakeholdersString.match(/[A-Z][a-zA-Z\\s&amp;]+:/g) || [];\r\n\r\n        if (categoryMatches.length === 0) {\r\n            // Simple fallback if no categories detected\r\n            return <p>{stakeholdersString}</p>;\r\n        }\r\n\r\n        // Create segments by splitting at each category\r\n        const categorySegments: { name: string; stakeholders: string[] }[] = [];\r\n\r\n        categoryMatches.forEach((categoryMatch, index) => {\r\n            const categoryName = categoryMatch.slice(0, -1); // Remove the colon\r\n\r\n            // Find start and end positions\r\n            const startPos = stakeholdersString.indexOf(categoryMatch) + categoryMatch.length;\r\n            const endPos = index < categoryMatches.length - 1\r\n                ? stakeholdersString.indexOf(categoryMatches[index + 1])\r\n                : stakeholdersString.length;\r\n\r\n            // Extract content\r\n            const content = stakeholdersString.substring(startPos, endPos).trim();\r\n\r\n            // Split by semicolons\r\n            const stakeholdersList = content\r\n                .split(';')\r\n                .map(item => item.trim())\r\n                .filter(Boolean)\r\n                .map(item => item.endsWith(',') ? item.slice(0, -1) : item); // Remove trailing commas\r\n\r\n            categorySegments.push({\r\n                name: categoryName,\r\n                stakeholders: stakeholdersList\r\n            });\r\n        });\r\n\r\n        return (\r\n            <div className=\"space-y-3\">\r\n                {categorySegments.map(category => (\r\n                    <div key={category.name} className=\"mb-2 last:mb-0\">\r\n                        <p>\r\n                            <span className=\"font-semibold\">{category.name}:</span>{' '}\r\n                            {category.stakeholders.join(', ')}\r\n                        </p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Helper function to render implementation challenges with colors\r\n    const renderChallenges = (challenges: string) => {\r\n        if (!challenges) return null;\r\n        // Regex to extract severity descriptor from strings like \"[significant] Whatever: ...\"\r\n        const severityRegex = /\\[([^\\]]+)\\]/;\r\n        // Define challenge severity colors\r\n        const getChallengeColor = (challenge: string): string => {\r\n            const colors = {\r\n                significant: \"bg-red-500\",\r\n                major: \"bg-orange-500\",\r\n                moderate: \"bg-yellow-500\",\r\n                minor: \"bg-blue-500\",\r\n                \"\": \"bg-blue-500\",\r\n            }\r\n\r\n\r\n            // Test function to demonstrate usage\r\n            function extractSeverity(input: string): keyof typeof colors {\r\n                const match = input.match(severityRegex);\r\n                return (match ? match[1] : \"\") as keyof typeof colors;\r\n            }\r\n            const severity = extractSeverity(challenge)\r\n\r\n            return colors[severity];\r\n        };\r\n\r\n        function stripSeverityTag(input: string) {\r\n            return input.replace(severityRegex, '').trim();\r\n        }\r\n\r\n        const challengeItems = challenges\r\n            .split(';')\r\n            .map(c => ({\r\n                color: getChallengeColor(c),\r\n                text: stripSeverityTag(c)\r\n            }))\r\n            .filter(Boolean);\r\n\r\n        return (\r\n            <>\r\n                {/* Challenge color legend */}\r\n                <div className=\"mb-3 flex items-center text-xs text-gray-600\">\r\n                    <span className=\"mr-3 flex items-center\">\r\n                        <span className=\"inline-block w-2 h-2 rounded-full bg-red-500 mr-1\"></span> Significant\r\n                    </span>\r\n                    <span className=\"mr-3 flex items-center\">\r\n                        <span className=\"inline-block w-2 h-2 rounded-full bg-yellow-500 mr-1\"></span> Moderate\r\n                    </span>\r\n                    <span className=\"flex items-center\">\r\n                        <span className=\"inline-block w-2 h-2 rounded-full bg-blue-500 mr-1\"></span> Minor\r\n                    </span>\r\n                </div>\r\n\r\n                {/* Challenge items */}\r\n                {challengeItems.map((data, idx) => (\r\n                    <div key={idx} className={`flex items-start ${idx > 0 ? 'mt-3' : ''}`}>\r\n                        <div className={`flex-shrink-0 w-2 h-2 mt-1.5 mr-2 rounded-full ${data.color}`}></div>\r\n                        <div>{data.text}</div>\r\n                    </div>\r\n                ))}\r\n            </>\r\n        );\r\n    };\r\n\r\n    const renderEvidenceBase = (evidenceBase: string) => {\r\n        if (!evidenceBase) return null;\r\n\r\n        return (\r\n            <div className=\"prose prose-sm max-w-none prose-a:text-blue-600 prose-a:underline\">\r\n                <ReactMarkdown\r\n                    components={{\r\n                        // Customize link rendering\r\n                        a: ({ node, ...props }) => (\r\n                            <a\r\n                                {...props}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"text-blue-600 hover:text-blue-800 underline\"\r\n                            />\r\n                        )\r\n                    }}\r\n                >\r\n                    {evidenceBase}\r\n                </ReactMarkdown>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-[200px]\">\r\n                <div className=\"text-lg\">Loading policy details...</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error || !policy) {\r\n        return (\r\n            <div className=\"p-4 mx-auto max-w-2xl\">\r\n                <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n                    <h3 className=\"text-red-800 font-semibold mb-2\">\r\n                        Error Loading Policy\r\n                    </h3>\r\n                    <p className=\"text-red-600\">{error || \"Policy not found\"}</p>\r\n                    <button\r\n                        onClick={() => router.push('/')}\r\n                        className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n                    >\r\n                        Back to Policies\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"max-w-3xl mx-auto bg-white rounded-lg shadow-sm p-6 relative\">\r\n            {/* Back button */}\r\n            <button\r\n                onClick={() => router.push('/')}\r\n                className=\"mb-4 text-blue-600 hover:text-blue-800 flex items-center\"\r\n            >\r\n                ‚Üê Back to Policies\r\n            </button>\r\n\r\n            {/* Share button */}\r\n            <button\r\n                onClick={copyPolicyLink}\r\n                className=\"absolute top-4 right-4 text-gray-500 hover:text-gray-700 flex items-center\"\r\n                aria-label=\"Share policy link\"\r\n            >\r\n                {copied ? (\r\n                    <>\r\n                        <Check size={18} className=\"mr-1 text-green-600\" />\r\n                        <span className=\"text-sm text-green-600\">Copied!</span>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Share2 size={18} className=\"mr-1\" />\r\n                        <span className=\"text-sm\">Share</span>\r\n                    </>\r\n                )}\r\n            </button>\r\n\r\n            {/* Policy title and basic info */}\r\n            <h2 className=\"text-2xl font-semibold mb-4 pr-32\">{policy.title}</h2>\r\n\r\n            <p className=\"text-gray-600 mb-6\">\r\n                {policy.summary || policy.description || \"\"}\r\n            </p>\r\n\r\n            {/* Domain tags */}\r\n            <div className=\"mb-6\">\r\n                <h3 className=\"text-lg font-medium mb-2\">Policy Areas:</h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                    {policyDomains.map((domain) => {\r\n                        const domainInfo = DOMAINS.find((d) => d.id === domain);\r\n                        return domainInfo ? (\r\n                            <button\r\n                                key={domain}\r\n                                className={`px-2 py-1 rounded text-sm ${getDomainColor(domain)} hover:opacity-80 cursor-pointer`}\r\n                                onClick={() => handleDomainClick(domain)}\r\n                            >\r\n                                {domainInfo.emoji} {domain.replace(/-/g, \" \").replace(/\\b\\w/g, l => l.toUpperCase())}\r\n                            </button>\r\n                        ) : null;\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Cost and impact information */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n                <div>\r\n                    <h3 className=\"text-lg font-medium mb-2\">Implementation Cost:</h3>\r\n                    <div className=\"flex items-center\">\r\n                        {COST_CATEGORIES.find(\r\n                            (c) => c.id === policy.implementation_cost_category\r\n                        )?.emoji || \"ü§î\"}\r\n                        <span className=\"ml-2\">\r\n                            {policy.implementation_cost_category.replace(/_/g, ' ')\r\n                                .replace(/\\b\\w/g, l => l.toUpperCase())}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <h3 className=\"text-lg font-medium mb-2\">Impact on City Budget:</h3>\r\n                    <div className=\"flex items-center\">\r\n                        {FISCAL_IMPACTS.find(\r\n                            (f) => f.id === policy.fiscal_impact_category\r\n                        )?.emoji || \"ü§î\"}\r\n                        <span className=\"ml-2\">\r\n                            {policy.fiscal_impact_category.replace(/_/g, ' ')\r\n                                .replace(/\\b\\w/g, l => l.toUpperCase())}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Evidence Base */}\r\n            {policy.evidence_base && (\r\n                <div className=\"mb-6\">\r\n                    <h3 className=\"text-lg font-medium mb-2\">Evidence Base</h3>\r\n                    <div className=\"bg-gray-50 border border-gray-200 p-4 rounded-md\">\r\n                        {renderEvidenceBase(policy.evidence_base)}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Stakeholders */}\r\n            {policy.stakeholders && (\r\n                <div className=\"mb-6\">\r\n                    <h3 className=\"text-lg font-medium mb-2\">Key Stakeholders</h3>\r\n                    <div className=\"bg-gray-50 border border-gray-200 p-4 rounded-md\">\r\n                        {renderStakeholders(policy.stakeholders)}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Implementation Challenges */}\r\n            {policy.implementation_challenges && (\r\n                <div className=\"mb-6\">\r\n                    <h3 className=\"text-lg font-medium mb-2\">Implementation Challenges</h3>\r\n                    <div className=\"bg-gray-50 border border-gray-200 p-4 rounded-md\">\r\n                        {renderChallenges(policy.implementation_challenges)}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}